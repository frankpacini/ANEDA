##### Config for generating datasets
## `key: value`, or `key: {key':value}`
## For tuning parameters, set `value` as a list (e.g.,  if we set `sample_method: ['random', 'high_degree', 'high_and_low_degree']`, we will generate 3 different configs)
random_seed: 42
graph:
  source: "osmnx" # "osmnx", "edgelist", "gr", "gis-f2e"
  name: "hartford" # "Winterthur, Switzerland"
  file_path: "../data/{name}.{source}"
  download_type: "drive"
  coord_path: "../data/{name}.co"
  plot_path: "../plots/{name}"
collab_filtering:
  "device": "cuda:0"
  "embedding_dim": 128
  "batch_size": 0 # 30229 # 73179 # 1024
  "epochs": 1000
  "lr": 0.01
  "loss_func": "poisson" # "mre", "mse", "poisson"
  "optimizer": "adam" # "adam", "sgd"
  "init_embedding": "coord" # "coord" "node2vec" "grarep" "none"
  "measure": "norm" # "norm" "spherical" "hyperbolic" "lat-long" "inv-dot"
  "norm": 6
  "sample_ratio": 0.03
  "test_sample_ratio": 0.1
run_routing: True
rizi_train: False

plot:
  plot_nx_graph: False
val_size: 0.2 # val/train = 20% / 80%, for training
log_path: "../output/logs"
force_recreate_train_and_val_sets: False
force_recreate_test_set: False
write_train_val_sets: True
write_test_set: True
parse_tuning_param_by: ->  ## helpful to create a list of configs
routing_num_samples: 25000
# df = pd.read_csv("routes.csv", names=["source", "target", "numVisited", "pathLength"])
node2vec:
  "device": cuda
  "embedding_dim": 128
  "walk_length": 80
  "window_size": 5
  "p": 1
  "q": 1
  "num_walks": 10
  "epochs": 100
  "batch_size": 256
  "lr": 0.01
# node2vec:
#   "device": cuda
#   "embedding_dim": 128
#   "walk_length": 80
#   "window_size": 10
#   "p": 1
#   "q": 1
#   "num_walks": 10
#   "epochs": 100
#   "batch_size": 256
#   "lr": 0.02
grarep:
  "embedding_dim": 128
  "iterations": 10
  "order": 100